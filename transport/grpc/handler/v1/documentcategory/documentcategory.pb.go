// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.12
// source: transport/grpc/handler/v1/documentcategory/documentcategory.proto

package documentcategory

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DocumentCategoryMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PerPage int32 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page"`
	Total   int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total"`
}

func (x *DocumentCategoryMeta) Reset() {
	*x = DocumentCategoryMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentCategoryMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentCategoryMeta) ProtoMessage() {}

func (x *DocumentCategoryMeta) ProtoReflect() protoreflect.Message {
	mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentCategoryMeta.ProtoReflect.Descriptor instead.
func (*DocumentCategoryMeta) Descriptor() ([]byte, []int) {
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP(), []int{0}
}

func (x *DocumentCategoryMeta) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DocumentCategoryMeta) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *DocumentCategoryMeta) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DocumentCategoryParameterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page            int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	PerPage         int32  `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page"`
	OrderBy         string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by"`
	OrderMethod     string `protobuf:"bytes,4,opt,name=order_method,json=orderMethod,proto3" json:"order_method"`
	SearchCondition string `protobuf:"bytes,5,opt,name=search_condition,json=searchCondition,proto3" json:"search_condition"`
	Equal           string `protobuf:"bytes,6,opt,name=equal,proto3" json:"equal"`
	Not             string `protobuf:"bytes,7,opt,name=not,proto3" json:"not"`
	Like            string `protobuf:"bytes,8,opt,name=like,proto3" json:"like"`
	DateRangeBy     string `protobuf:"bytes,9,opt,name=date_range_by,json=dateRangeBy,proto3" json:"date_range_by"`
	DateStart       string `protobuf:"bytes,10,opt,name=date_start,json=dateStart,proto3" json:"date_start"`
	DateEnd         string `protobuf:"bytes,11,opt,name=date_end,json=dateEnd,proto3" json:"date_end"`
}

func (x *DocumentCategoryParameterRequest) Reset() {
	*x = DocumentCategoryParameterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentCategoryParameterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentCategoryParameterRequest) ProtoMessage() {}

func (x *DocumentCategoryParameterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentCategoryParameterRequest.ProtoReflect.Descriptor instead.
func (*DocumentCategoryParameterRequest) Descriptor() ([]byte, []int) {
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP(), []int{1}
}

func (x *DocumentCategoryParameterRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DocumentCategoryParameterRequest) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *DocumentCategoryParameterRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *DocumentCategoryParameterRequest) GetOrderMethod() string {
	if x != nil {
		return x.OrderMethod
	}
	return ""
}

func (x *DocumentCategoryParameterRequest) GetSearchCondition() string {
	if x != nil {
		return x.SearchCondition
	}
	return ""
}

func (x *DocumentCategoryParameterRequest) GetEqual() string {
	if x != nil {
		return x.Equal
	}
	return ""
}

func (x *DocumentCategoryParameterRequest) GetNot() string {
	if x != nil {
		return x.Not
	}
	return ""
}

func (x *DocumentCategoryParameterRequest) GetLike() string {
	if x != nil {
		return x.Like
	}
	return ""
}

func (x *DocumentCategoryParameterRequest) GetDateRangeBy() string {
	if x != nil {
		return x.DateRangeBy
	}
	return ""
}

func (x *DocumentCategoryParameterRequest) GetDateStart() string {
	if x != nil {
		return x.DateStart
	}
	return ""
}

func (x *DocumentCategoryParameterRequest) GetDateEnd() string {
	if x != nil {
		return x.DateEnd
	}
	return ""
}

type DocumentCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name      string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Slug      string  `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug"`
	Size      float64 `protobuf:"fixed64,4,opt,name=size,proto3" json:"size"`
	MimeTypes string  `protobuf:"bytes,5,opt,name=mime_types,json=mimeTypes,proto3" json:"mime_types"`
	Desc      string  `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc"`
	CreatedAt string  `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
}

func (x *DocumentCategory) Reset() {
	*x = DocumentCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentCategory) ProtoMessage() {}

func (x *DocumentCategory) ProtoReflect() protoreflect.Message {
	mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentCategory.ProtoReflect.Descriptor instead.
func (*DocumentCategory) Descriptor() ([]byte, []int) {
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP(), []int{2}
}

func (x *DocumentCategory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DocumentCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DocumentCategory) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *DocumentCategory) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DocumentCategory) GetMimeTypes() string {
	if x != nil {
		return x.MimeTypes
	}
	return ""
}

func (x *DocumentCategory) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DocumentCategory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type DocumentCategoryDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeletedAt string `protobuf:"bytes,1,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at"`
}

func (x *DocumentCategoryDeleted) Reset() {
	*x = DocumentCategoryDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentCategoryDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentCategoryDeleted) ProtoMessage() {}

func (x *DocumentCategoryDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentCategoryDeleted.ProtoReflect.Descriptor instead.
func (*DocumentCategoryDeleted) Descriptor() ([]byte, []int) {
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP(), []int{3}
}

func (x *DocumentCategoryDeleted) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type DocumentCategories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DocumentCategory   `protobuf:"bytes,5,rep,name=data,proto3" json:"data"`
	Meta *DocumentCategoryMeta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta"`
}

func (x *DocumentCategories) Reset() {
	*x = DocumentCategories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentCategories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentCategories) ProtoMessage() {}

func (x *DocumentCategories) ProtoReflect() protoreflect.Message {
	mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentCategories.ProtoReflect.Descriptor instead.
func (*DocumentCategories) Descriptor() ([]byte, []int) {
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP(), []int{4}
}

func (x *DocumentCategories) GetData() []*DocumentCategory {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DocumentCategories) GetMeta() *DocumentCategoryMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type FindDocumentCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *FindDocumentCategoryRequest) Reset() {
	*x = FindDocumentCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDocumentCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDocumentCategoryRequest) ProtoMessage() {}

func (x *FindDocumentCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDocumentCategoryRequest.ProtoReflect.Descriptor instead.
func (*FindDocumentCategoryRequest) Descriptor() ([]byte, []int) {
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP(), []int{5}
}

func (x *FindDocumentCategoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FindDocumentCategoryBySlugRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug"`
}

func (x *FindDocumentCategoryBySlugRequest) Reset() {
	*x = FindDocumentCategoryBySlugRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindDocumentCategoryBySlugRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDocumentCategoryBySlugRequest) ProtoMessage() {}

func (x *FindDocumentCategoryBySlugRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDocumentCategoryBySlugRequest.ProtoReflect.Descriptor instead.
func (*FindDocumentCategoryBySlugRequest) Descriptor() ([]byte, []int) {
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP(), []int{6}
}

func (x *FindDocumentCategoryBySlugRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type GetDocumentCategoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameters *DocumentCategoryParameterRequest `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters"`
}

func (x *GetDocumentCategoriesRequest) Reset() {
	*x = GetDocumentCategoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocumentCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentCategoriesRequest) ProtoMessage() {}

func (x *GetDocumentCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentCategoriesRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP(), []int{7}
}

func (x *GetDocumentCategoriesRequest) GetParameters() *DocumentCategoryParameterRequest {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type SaveDocumentCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug        string  `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Size        float64 `protobuf:"fixed64,3,opt,name=size,proto3" json:"size"`
	MimeTypes   string  `protobuf:"bytes,4,opt,name=mime_types,json=mimeTypes,proto3" json:"mime_types"`
	Description string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description"`
}

func (x *SaveDocumentCategoryRequest) Reset() {
	*x = SaveDocumentCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveDocumentCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveDocumentCategoryRequest) ProtoMessage() {}

func (x *SaveDocumentCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveDocumentCategoryRequest.ProtoReflect.Descriptor instead.
func (*SaveDocumentCategoryRequest) Descriptor() ([]byte, []int) {
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP(), []int{8}
}

func (x *SaveDocumentCategoryRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *SaveDocumentCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveDocumentCategoryRequest) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SaveDocumentCategoryRequest) GetMimeTypes() string {
	if x != nil {
		return x.MimeTypes
	}
	return ""
}

func (x *SaveDocumentCategoryRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateDocumentCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Slug        string  `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug"`
	Name        string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Size        float64 `protobuf:"fixed64,4,opt,name=size,proto3" json:"size"`
	MimeTypes   string  `protobuf:"bytes,5,opt,name=mime_types,json=mimeTypes,proto3" json:"mime_types"`
	Description string  `protobuf:"bytes,6,opt,name=description,proto3" json:"description"`
}

func (x *UpdateDocumentCategoryRequest) Reset() {
	*x = UpdateDocumentCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDocumentCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocumentCategoryRequest) ProtoMessage() {}

func (x *UpdateDocumentCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocumentCategoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateDocumentCategoryRequest) Descriptor() ([]byte, []int) {
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateDocumentCategoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDocumentCategoryRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *UpdateDocumentCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDocumentCategoryRequest) GetSize() float64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UpdateDocumentCategoryRequest) GetMimeTypes() string {
	if x != nil {
		return x.MimeTypes
	}
	return ""
}

func (x *UpdateDocumentCategoryRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DeleteDocumentCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *DeleteDocumentCategoryRequest) Reset() {
	*x = DeleteDocumentCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDocumentCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentCategoryRequest) ProtoMessage() {}

func (x *DeleteDocumentCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteDocumentCategoryRequest) Descriptor() ([]byte, []int) {
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteDocumentCategoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_transport_grpc_handler_v1_documentcategory_documentcategory_proto protoreflect.FileDescriptor

var file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDesc = []byte{
	0x0a, 0x41, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x30, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x5b, 0x0a, 0x14, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xd4, 0x02, 0x0a, 0x20, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70,
	0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x71, 0x75, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6e, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x10, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x38, 0x0a, 0x17,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x12, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x56, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x22, 0x2d, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x37, 0x0a, 0x21, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x22, 0x92, 0x01, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x52,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x9a,
	0x01, 0x0a, 0x1b, 0x53, 0x61, 0x76, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xac, 0x01, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6d,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x1d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xc0, 0x08, 0x0a, 0x17,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb4, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x4f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0xa9,
	0x01, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x4d, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0xb5, 0x01, 0x0a, 0x1a, 0x46,
	0x69, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x53, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42,
	0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0xad, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x4e, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0xa9, 0x01, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x4d, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0xad,
	0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x4f, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x2c,
	0x5a, 0x2a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescOnce sync.Once
	file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescData = file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDesc
)

func file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescGZIP() []byte {
	file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescOnce.Do(func() {
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescData = protoimpl.X.CompressGZIP(file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescData)
	})
	return file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDescData
}

var file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_goTypes = []interface{}{
	(*DocumentCategoryMeta)(nil),              // 0: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryMeta
	(*DocumentCategoryParameterRequest)(nil),  // 1: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryParameterRequest
	(*DocumentCategory)(nil),                  // 2: micro.transport.grpc.handler.v1.documentcategory.DocumentCategory
	(*DocumentCategoryDeleted)(nil),           // 3: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryDeleted
	(*DocumentCategories)(nil),                // 4: micro.transport.grpc.handler.v1.documentcategory.DocumentCategories
	(*FindDocumentCategoryRequest)(nil),       // 5: micro.transport.grpc.handler.v1.documentcategory.FindDocumentCategoryRequest
	(*FindDocumentCategoryBySlugRequest)(nil), // 6: micro.transport.grpc.handler.v1.documentcategory.FindDocumentCategoryBySlugRequest
	(*GetDocumentCategoriesRequest)(nil),      // 7: micro.transport.grpc.handler.v1.documentcategory.GetDocumentCategoriesRequest
	(*SaveDocumentCategoryRequest)(nil),       // 8: micro.transport.grpc.handler.v1.documentcategory.SaveDocumentCategoryRequest
	(*UpdateDocumentCategoryRequest)(nil),     // 9: micro.transport.grpc.handler.v1.documentcategory.UpdateDocumentCategoryRequest
	(*DeleteDocumentCategoryRequest)(nil),     // 10: micro.transport.grpc.handler.v1.documentcategory.DeleteDocumentCategoryRequest
}
var file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_depIdxs = []int32{
	2,  // 0: micro.transport.grpc.handler.v1.documentcategory.DocumentCategories.data:type_name -> micro.transport.grpc.handler.v1.documentcategory.DocumentCategory
	0,  // 1: micro.transport.grpc.handler.v1.documentcategory.DocumentCategories.meta:type_name -> micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryMeta
	1,  // 2: micro.transport.grpc.handler.v1.documentcategory.GetDocumentCategoriesRequest.parameters:type_name -> micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryParameterRequest
	10, // 3: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.DeleteDocumentCategory:input_type -> micro.transport.grpc.handler.v1.documentcategory.DeleteDocumentCategoryRequest
	5,  // 4: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.FindDocumentCategory:input_type -> micro.transport.grpc.handler.v1.documentcategory.FindDocumentCategoryRequest
	6,  // 5: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.FindDocumentCategoryBySlug:input_type -> micro.transport.grpc.handler.v1.documentcategory.FindDocumentCategoryBySlugRequest
	7,  // 6: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.GetDocumentCategories:input_type -> micro.transport.grpc.handler.v1.documentcategory.GetDocumentCategoriesRequest
	8,  // 7: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.SaveDocumentCategory:input_type -> micro.transport.grpc.handler.v1.documentcategory.SaveDocumentCategoryRequest
	9,  // 8: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.UpdateDocumentCategory:input_type -> micro.transport.grpc.handler.v1.documentcategory.UpdateDocumentCategoryRequest
	3,  // 9: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.DeleteDocumentCategory:output_type -> micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryDeleted
	2,  // 10: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.FindDocumentCategory:output_type -> micro.transport.grpc.handler.v1.documentcategory.DocumentCategory
	2,  // 11: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.FindDocumentCategoryBySlug:output_type -> micro.transport.grpc.handler.v1.documentcategory.DocumentCategory
	4,  // 12: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.GetDocumentCategories:output_type -> micro.transport.grpc.handler.v1.documentcategory.DocumentCategories
	2,  // 13: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.SaveDocumentCategory:output_type -> micro.transport.grpc.handler.v1.documentcategory.DocumentCategory
	2,  // 14: micro.transport.grpc.handler.v1.documentcategory.DocumentCategoryService.UpdateDocumentCategory:output_type -> micro.transport.grpc.handler.v1.documentcategory.DocumentCategory
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_init() }
func file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_init() {
	if File_transport_grpc_handler_v1_documentcategory_documentcategory_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentCategoryMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentCategoryParameterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentCategoryDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentCategories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindDocumentCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindDocumentCategoryBySlugRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocumentCategoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveDocumentCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDocumentCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDocumentCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_goTypes,
		DependencyIndexes: file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_depIdxs,
		MessageInfos:      file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_msgTypes,
	}.Build()
	File_transport_grpc_handler_v1_documentcategory_documentcategory_proto = out.File
	file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_rawDesc = nil
	file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_goTypes = nil
	file_transport_grpc_handler_v1_documentcategory_documentcategory_proto_depIdxs = nil
}
